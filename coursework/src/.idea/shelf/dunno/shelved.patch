Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(date 1449285702000)
+++ .idea/misc.xml	(revision )
@@ -37,7 +37,7 @@
     <ConfirmationsSetting value="0" id="Add" />
     <ConfirmationsSetting value="0" id="Remove" />
   </component>
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_7" default="true" assert-keyword="true" jdk-15="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" default="true" assert-keyword="true" jdk-15="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/build/classes" />
   </component>
   <component name="ProjectType">
\ No newline at end of file
Index: app/src/main/java/hu/devo/bastet/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/hu/devo/bastet/MainActivity.java	(date 1449285702000)
+++ app/src/main/java/hu/devo/bastet/MainActivity.java	(revision )
@@ -191,6 +191,11 @@
                     });
                 }
 
+                @Override
+                public void onTermination() {
+                    finish();
+                }
+
             };
 
 
@@ -277,12 +282,6 @@
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_main);
 
-        //start and bind to the MusicService
-        //need both so that it keeps running even after unbind
-        Intent binderIntent = new Intent(this, MusicService.class);
-        startService(binderIntent);
-        bindService(binderIntent, sc, Context.BIND_AUTO_CREATE);
-
         //without butterknife there would be 50 lines of findByIds here
         ButterKnife.bind(this);
 
@@ -358,12 +357,12 @@
         BaseDialog.init(this);
 
         MusicResolver.registerObserver();
-
     }
 
     @DebugLog
     @Override
     protected void onResume() {
+        Logger.i("ms " + ms);
         if (ms != null) {
             ms.setActivityVisible(true);
             if (!listenersAttached) {
@@ -375,6 +374,13 @@
                 Music m = ms.getQueueManager().getNowPlaying();
                 loadMusicInfo(m);
             }
+        } else {
+            Logger.i("starting service");
+            //start and bind to the MusicService
+            //need both so that it keeps running even after unbind
+            Intent binderIntent = new Intent(this, MusicService.class);
+            startService(binderIntent);
+            bindService(binderIntent, sc, Context.BIND_AUTO_CREATE);
         }
         PlaylistSelectorDialog.listen();
         super.onResume();
@@ -397,11 +403,17 @@
 
     @DebugLog
     @Override
-    protected void onDestroy() {
-        if (!ms.isPlaying()) {
+    protected void onStop() {
+        if (ms != null && !ms.isPlaying()) {
             stopService(new Intent(this, MusicService.class));
+            ms = null;
         }
         unbindService(sc);
+        super.onStop();
+    }
+
+    @Override
+    protected void onDestroy() {
         MusicResolver.unregisterObserver();
         super.onDestroy();
     }
Index: app/src/main/java/hu/devo/bastet/service/PlaybackNotificationManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/hu/devo/bastet/service/PlaybackNotificationManager.java	(date 1449285702000)
+++ app/src/main/java/hu/devo/bastet/service/PlaybackNotificationManager.java	(revision )
@@ -115,6 +115,7 @@
     }
 
     public void removeNotification() {
+        Logger.i("removing notification");
         notificationManager.cancel(NOTIFICATION_ID);
     }
 
@@ -229,8 +230,8 @@
         public void onReceive(Context context, Intent intent) {
             switch (intent.getAction()) {
                 case ACTION_STOP:
-                    ms.terminateMaybe();
                     ms.notifyForcedPause();
+                    ms.terminateMaybe();
                     break;
                 case ACTION_PAUSE:
                     ms.pause();
Index: app/src/main/java/hu/devo/bastet/service/MusicService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/hu/devo/bastet/service/MusicService.java	(date 1449285702000)
+++ app/src/main/java/hu/devo/bastet/service/MusicService.java	(revision )
@@ -107,14 +107,14 @@
         notifManager.createNotification(queueManager.getNowPlaying(), false);
     }
 
+    @DebugLog
     public void terminateMaybe() {
         pause();
         if (activityVisible) {
             notifManager.removeNotification();
         } else {
             Logger.i("terminating at " + getQueueManager().getNowPlaying());
-            stopSelf();
-            // TODO: 05/12/2015 notify finish
+            notifyTermination();
         }
     }
 
@@ -198,6 +198,12 @@
         }
     }
 
+    public void notifyTermination() {
+        for (MusicEventListener l : musicEventListeners.values()) {
+            l.onTermination();
+        }
+    }
+
     public void addQueueEventListener(Class classContext, QueueEventListener l) {
         if (l != null) {
             queueEventListeners.put(classContext, l);
@@ -259,6 +265,11 @@
          * called when an error happens
          */
         void onError();
+
+        /**
+         * called when the notification is dismissed and the activity is not in the foreground
+         */
+        void onTermination();
     }
 
     public interface QueueEventListener {
